* Copyright 2025 Aleksandr Bocharov
* Distributed under the Boost Software License, Version 1.0.
* See accompanying file LICENSE_1_0.txt
* or copy at http://www.boost.org/LICENSE_1_0.txt
* 2025-01-15
* https://github.com/Aleksandr3Bocharov/RefalAB

*====================================================================
* Рефал-функции библиотеки РефалАБ.
* Спецификаторы библиотеки РефалАБ.
* Пустые функции библиотеки РефалАБ.
*====================================================================

EXT         START
            ENTRY Call, Map, FoldL, FoldR
            ENTRY MapAccum, DelAccum
            ENTRY LoadFile, SaveFile, AppendFile(AppFile)
            ENTRY WhiteSpaces(WSpaces), IsWhiteSpace(IsWSpace)
            ENTRY Trim, TrimL, TrimR  
            ENTRY Exist, Set
            ENTRY True, False
            EXTRN XOpen, XClose, XGet, XPut
            EMPTY True, False

* <Call WC EA> == ER
Call +
    SF EA   = < SF EA>
    (WC EB) EA +
            = <Call WC EB EA>

* <Map WC WI*> == ER
Map +
    WC WN ET +
            = <Call WC WN> <Map WC ET>
    W0      =

* <FoldL WC WA WI*> == WA'
FoldL +
    WC WA WN ET +
            = <FoldL WC <Call WC WA WN> ET>
    WC WA = WA

* <FoldR WC WI* WA> == WA'
FoldR +
    WC EH WP WA +
            = <FoldR WC EH <Call WC WP WA>>
    WC WA = WA

* <MapAccum WC WA WI*> == WA′ ER
MapAccum +
    WC WA ET +
            = <DoMapAccum WC WA () ET>
  
DoMapAccum +
    WC WA (ER) WN ET +
            = <DoMapAccum WC +
                <MapAccumAddScanned +
                    <Call WC WA WN> +
                (ER)> +
            ET>
    WC WA (ER) +
            = WA ER
  
MapAccumAddScanned + 
    WA ES (ER) +
            = WA (ER ES)

* <DelAccum W E> == E
DelAccum +
    WA ER   = ER

* <LoadFile S(/0/../4/)N E(O)F> == (E(O)L)*
LoadFile +
    SN EF   = <XOpen 'r' SN EF> +
            <DoLoadFile SN <XGet SN>> +
            <XClose 'r' SN>
  
DoLoadFile +
    SN /0/  =
    SN EL /0/ +
            = (EL)
    SN EL   = (EL) <DoLoadFile SN <XGet SN>>

* <SaveFile S(/0/../4/)N (E(O)F) (E(O)L)*> == 
SaveFile +
    SN (EF) EL +
            = <XOpen 'w' SN EF> +
            <Map (/SaveFileWriteBracketLine/ SN) EL> +
            <XClose 'w' SN>
  
SaveFileWriteBracketLine +
    SN (EL) = <XPut SN EL>

* <AppendFile S(/0/../4/)N (E(O)F) (E(O)L)*> == 
AppendFile +
    SN (EF) EL +
            = <XOpen 'a' SN EF> +
            <Map (/SaveFileWriteBracketLine/ SN) EL> +
            <XClose 'w' SN>

WhiteSpaces S   ' \n\t\v\f\r'

* <IsWhiteSpace SW> == /True/ | /False/
IsWhiteSpace +
    S(:WhiteSpaces:)W +
            = /True/
    S0      = /False/

* <Trim E> == E'
Trim +
    EL      = <TrimL <TrimR EL>>

* <TrimL E> == E'
TrimL +
    S(:WhiteSpaces:)W EL +
            = <TrimL EL>
    E0      = E0
  
* <TrimR E> == E'
TrimR +
    EL S(:WhiteSpaces:)W +
            = <TrimR EL>
    E0      = E0
  
* <Exist W E> == /True/ | /False/
Exist +
    WS EB WS EE +
            = /True/
    WS E0   = /False/
  
* <Set WE*> == WS*
Set +
    R EB WS EM WS EE +
            = <Set EB WS EM> EE
    E0      = E0

            END

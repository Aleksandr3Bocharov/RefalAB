* Copyright 2024 Aleksandr Bocharov
* Distributed under the Boost Software License, Version 1.0.
* See accompanying file LICENSE_1_0.txt
* or copy at http://www.boost.org/LICENSE_1_0.txt
* 2024-10-12
* https://github.com/Aleksandr3Bocharov/RefalAB

TEST0       START
            ENTRY Go
            EXTRN Add, M1, Prout, Numb, Symb, First, Last, LengR, LengW
            EXTRN New, Wtr, Rdr, Ptr, Gtr, Swr, Mul, P1, Proutm
            EXTRN Dr
            EXTRN PpnPut, PpnGet, ClsPut, ClsGet, LibGet, LibPut
            EXTRN Br, Rp, Dg, DgAll, Cp, Print, Renam, Unlnk
            EMPTY Tra, Em1, Em2, Em3, Pus
            SWAP Sw

Div +
    E1      = <Div0 <Dr E1>>

Div0 +
    E1 (E2) = E1

Bspe  S  '2134' /Pus/

Go          = <Prsw> +
            <Prvv> +
            <Prkop> +
            <Dal1> +
            <Prspe /Pus/ 'as01a432l7l' /Em3/>

*      prowerka  specifikacii
Prspe +
    E2 S(/Em1/ /Em2/ /Em3/)1 +
            = <Prout ' symbol-/em/' S1> <Prspe E2>
    S(:Bspe:)1 Ek +
            = <Prout ' symbol-b=' S1> <Prspe Ek>
    R Eh S('l7')1 +
            = <Prout ' symbol-l=' S1> <Prspe Eh>
    Ss Ek   = <Prout '  symbol=' Ss> <Prspe Ek>
            =

*      prowerka mul, p1,lengr,lengw,first,last,numb,symb,add,m1,sub
Dal1        = <Prmu (/126/) /2/> <Prmu (/65536/) /64/> <Prmu/ (/16777215/) /1/> +
*           <Prmu (/65536/) /512/> +    neot
            <Prdl (/65536/) /4/> <Prdl (/65536/) /666/> +
*           <Prdl (/1/) /0/> +      neot
            <Prp1 /4/> <Prp1 /65536/> <Prp1 /128/> +
*           <Prp1 /16777215/> +     neot
            <Dal/>

Dal         = <Prln /0/ /1/ '345678'> <Prln (/0/ /1/) '345678'> +
            <Prfe /3/ '1234567'> <Prla /3/ '123456'> <Prfe /1/ /2/> +
            <Prla /3/ /1/ /2/ /3/ '567'> +
*           <Prfe '123'> <Prla '123'> +          neot
            <Prnu '125'> <Prnu '76666'> <Prnu '16777215'> +
*           <Prnu '17777215'> <Prnu '-45'> +      neot
            <Prsy /5678/> <Prsy /16777215/> +
*           <Prad (/128/) /456/> <Prad (/16777215/) /2/> +     neot
            <Prm1 /3/> <Prm1/ /128/> <Prm1 /16777215/>
*           <Prsu (/16777215/) /2/> <Prsu (/2/) /456/>

prmu e1 = k/prow//mul/e1.

prnu e1 = k/prow//numb/e1.

prsy e1 = k/prow//symb/e1.

prad e1 = k/prow//add/e1.

prm1 e1 = k/prow//m1/e1.

prdl e1 = k/prow//div/e1.

prp1 e1 = k/prow//p1/e1.

prfe e1 = k/prow//first/e1.

prla e1 = k/prow//last/e1.

prow s1 e2 = k/proutm/s1', whod='e2'  wyh='k s1 e2..

*
*
prkop   = k/br/'cc='/123/.k/br/'mmm=345'.k/rp/'mmm=879'.k/dg/'mmm'.+
          k/cp/'cc'.k/dgall/.+
          k/br//tra/'=765'.k/rp//tra/'='/16777215/.k/dg//tra/.

*
prvv  = k/opnput/'lala.put'.+
       k/libput/' str 1'.k/libput/' str 2'.k/clsput/.+
       <opnput '*lala.put'> <libput ' str 3'> <clsput> +
       <renam 'lala.put lala.get'> +
       k/opnget//4/'lala.get'.+
       k/print/k/libget//4/..k/print/k/libget//4/..+
       k/print/k/libget//4/..k/clsget//4/. <unlnk 'lala.get'>

*
prsw    = k/sw1/k/new//123456/..k/wtr//sw//123456/.k/ptr//sw/'0'.+
                                k/rdr//sw/.k/gtr//sw/.

sw1 Rx  = k/ptr/ Rx/2/.k/rdr/ rx.k/wtr/ rx/12/.k/sw2/rx.

sw2 Rx  = k/ptr/Rx/3/.k/rdr/Rx.k/gtr/Rx.k/swr/Rx'0'/16777215/'0'.+
                                 k/prout/ k/rdr/Rx..

prln e1 = k/prout/' lengr,lengw: whod='e1'  wyh-r='k/lengr/e1.+
                                         '  wyh-w='k/lengw/e1..

            END
